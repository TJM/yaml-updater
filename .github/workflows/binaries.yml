name: Publish native binaries

on:
  workflow_dispatch:
  release:
    types: [created, edited]

jobs:
  build:
    name: Build ${{ matrix.artifact }} on ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        includes:
          - artifact: yaml-updater.exe
            runs-on: windows-latest
            experimental: true
          - artifact: yaml-updater-mac-amd64
            runs-on: macos-latest
          - artifact: yaml-updater-linux-amd64
            runs-on: ubuntu-latest
          - artifact: yaml-updater-alpine-amd64
            runs-on: alpine-latest
            experimental: true
          - artifact: yaml-updater.jar
            runs-on: ubuntu-latest

    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup MS dev tools
        if: ${{ endsWith(matrix.artifact, '.exe' }}
        uses: ilammy/msvc-dev-cmd@v1.10.0

      - name: Setup MS VS tools
        if: ${{ endsWith(matrix.artifact, '.exe' }}
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Build
        run: |
          chmod +x gradlew
          ./gradlew :yaml-config-updater-cli:nativeImage --no-daemon

      - name: Rename files
        shell: bash
        env:
          ARTIFACT: ${{ matrix.artifact }}
        run: |
          case ${ARTIFACT} in
            *.exe)
              SOURCE='yaml-config-updater-cli.exe'
              ;;
            *.jar)
              SOURCE='yaml-config-updater-cli/build/libs/*-all.jar'
            *)
              SOURCE='yaml-config-updater-cli/build/graal/yaml-config-updater-cli'
              ;;
          esac
          mkdir upload
          cp ${SOURCE} upload/${ARTIFACT}

      - name: Run UPX
        uses: crazy-max/ghaction-upx@v1.4.0
        continue-on-error: true
        with:
          version: latest
          files: upload/${{ matrix.artifact }}
          args: "--lzma --best"

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: upload/${{ matrix.artifact }}

  publishBuilds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        artifact:
          - yaml-updater.exe
          - yaml-updater-mac-amd64
          - yaml-updater-linux-amd64
          - yaml-updater-alpine-amd64
          - yaml-updater.jar
    needs: [build]
    steps:
      - name: Download artifact ${{ matrix.artifact }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: upload

      - name: Upload ${{ matrix.artifact }}
        if: ${{ github.event_name == 'release' }}
        uses: JasonEtco/upload-to-release@master
        with:
          args: upload/${{ matrix.artifact }} application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
